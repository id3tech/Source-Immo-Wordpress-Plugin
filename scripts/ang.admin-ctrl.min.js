function BaseDialogController($dialogId,$scope,$rootScope,$mdDialog){return $scope.dialogId=$dialogId,$scope.callback=null,$scope.title=$dialogId.replace("-"," "),$scope.actions=[{label:"OK",action:function(){$scope.cancel()}}],$scope._dialogInit_=function(){$scope.$on("on-"+$scope.dialogId,function($event,$params,$callback){console.log("instance of dialog",$scope.dialogId,"called with",$params),"function"==typeof $scope.init&&$scope.init($params),$scope.open($scope.dialogId),$scope.callback=$callback})},$scope.setTitle=function($new_title){$scope.title=$new_title},$scope.open=function($dialogId){return $mdDialog.show({contentElement:"#"+$dialogId,parent:angular.element(document.body),targetEvent:null,clickOutsideToClose:!0,fullscreen:!0})},$scope.cancel=function(){$mdDialog.cancel()},$scope.return=function($result){$scope.callback($result),$mdDialog.cancel()},$scope}function BasePageController($pageId,$scope,$rootScope){return $scope.pageId=$pageId,$scope.callback=null,$scope.actions=[{label:"OK",action:function(){$scope.cancel()}}],$scope._pageInit_=function(){console.log("pageInit for",$scope.pageId,"called"),$scope.$on("on-"+$scope.pageId,function($event,$params,$callback){console.log("instance of page",$scope.pageId,"called with",$params),"function"==typeof $scope.init&&$scope.init($params),$scope.open_page($scope.pageId),$scope.callback=$callback})},$scope.cancel=function(){$scope.close_page()},$scope.return=function($result){$scope.callback($result),$scope.close_page()},$scope.open_page=function($page_id){$rootScope.current_page=$page_id},$scope.close_page=function(){$rootScope.current_page="home"},$scope}ImmoDbApp.controller("homeCtrl",function($scope,$rootScope){console.log("configs controller loaded"),$scope.route_elements={"{{id}}":"ID","{{transaction}}":"Transaction type","{{location.region}}":"Region","{{location.city}}":"City","{{location.street}}":"Street","{{location.civic_address}}":"Civic address"},$scope._pageInit_=function(){},$scope.addRouteElement=function($item,$elm){$item.route+=$elm},$scope.addRoute=function($list){let lLocale="";for(let $key in $scope.lang_codes)$list.map(function(e){return e.lang}).indexOf($key)<0&&(lLocale=$key);$list.push({lang:lLocale,route:""})},$scope.removeRoute=function($route,$list_name){let lNewRoutes=[],lList;$scope.configs[$list_name].forEach(function($e){$e!=$route&&lNewRoutes.push($e)}),$scope.configs[$list_name]=lNewRoutes},$scope.hasMinRouteCount=function($list){return 1==$list.length},$scope.hasMaxRouteCount=function($list){let lResult=!0;if($list)for(let $key in $scope.lang_codes)$list.map(function(e){return e.lang}).indexOf($key)<0&&(lResult=!1);return lResult}}),ImmoDbApp.controller("listCollectionCtrl",function($scope,$rootScope){$scope.init=function(){},$scope.add=function(){$scope.show_page("listEdit",null).then(function($result){lNew=$result,$scope.configs.lists.push(lNew)})},$scope.edit=function($list){$scope.show_page("listEdit",$list).then(function($result){console.log("new list data",$result);for(const key in $result)if($result.hasOwnProperty(key)){const element=$result[key];$list[key]=element}})},$scope.remove=function($list){$scope.confirm("Are you sure you want to remove this list?","This action could renders some sections of your site blank",{ok:"Continue"}).then(function(){let lNewlists=[];$scope.configs.lists.forEach(function($e){$e!=$list&&lNewlists.push($e)}),$scope.configs.lists=lNewlists,$scope.show_toast("List removed")})},$scope.getListShortcode=function($list){return'[immodb alias="'+$list.alias+'"]'},$scope.countFilters=function($list){let lResult=0;return null!=$list.filter_groups&&$list.filter_groups.forEach(function($e){lResult+=$e.filters.length}),lResult}}),ImmoDbApp.controller("listEditCtrl",function($scope,$rootScope,$q){BasePageController("listEdit",$scope,$rootScope),$scope.model={},$scope._original=null,$scope.actions=[{label:"Apply".translate(),action:function(){$scope.return($scope.model)}},{label:"Cancel".translate(),action:$scope.cancel}],$scope.init=function($params){console.log("listEdit init"),null==$params?$scope.model={alias:"New list".translate(),source:$scope.data_views[0],type:"listings",sort:"auto",sort_reverse:!1,limit:0,searchable:!0,sortable:!0,mappable:!0,list_layout:{preset:"standard",scope_class:"",custom:null},list_item_layout:{preset:"standard",scope_class:"",custom:null},filter_group:{filters:[],filter_groups:[],operator:"and"}}:($scope.model=angular.copy($params),$scope.validate()),$scope._original=$params},$scope.saveOrClose=function(){$scope.hasChanged()?$scope.renewSearchToken().then(function($searchToken){$scope.model.search_token=$searchToken,$scope.return($scope.model)}):$scope.cancel()},$scope.renewSearchToken=function(){let lFilters=$scope.buildFilters(),lPromise;return $q(function($resolve,$reject){null!=lFilters?$scope.api("",lFilters,{url:wpApiSettings.api_root+"/api/utils/search_encode"}).then(function($response){$resolve($response)}):$resolve("")})},$scope.buildFilters=function(){let lResult=null;return $scope.model.limit>0&&(lResult={max_item_count:$scope.model.limit}),""!=$scope.model.sort&&"auto"!=$scope.model.sort&&(null==lResult&&(lResult={}),lResult.sort_fields=[{field:$scope.model.sort,desc:$scope.model.sort_reverse}]),null!=$scope.model.filter_group&&(null==lResult&&(lResult={}),lResult.filter_group=$scope.normalizeFilterGroup(angular.copy($scope.model.filter_group))),lResult},$scope.normalizeFilterGroup=function($filter_group){return $filter_group.filters&&$filter_group.filters.forEach(function($filter){["in","not_in"].indexOf($filter.operator)>=0?($filter.value=$filter.value.split(","),$filter.value.forEach(function($val){isNaN($val)||($val=Number($val))})):isNaN($filter.value)||($filter.value=Number($filter.value))}),$filter_group.filter_groups&&$filter_group.filter_groups.forEach(function($group){$scope.normalizeFilterGroup($group)}),$filter_group},$scope.switchSortReverse=function(){$scope.model.sort_reverse=!$scope.model.sort_reverse},$scope.hasChanged=function(){return!$scope.isSame($scope.model,$scope._original)},$scope.validate=function(){}}),ImmoDbApp.controller("mainCtrl",function($scope,$rootScope,$mdDialog,$q,$http,$mdToast){$scope.configs={},$scope.lang_codes={fr:"Français",en:"English",es:"Español"},$scope.global_list={sources:[],list_types:[{key:"listings",label:"Listings"},{key:"brokers",label:"Brokers"},{key:"cities",label:"Cities"}],list_layouts:[{name:"standard",label:"Standard"},{name:"map",label:"Map"},{name:"direct",label:"Direct render"},{name:"custom",label:"Custom"}],list_item_layouts:[{name:"standard",label:"Standard"},{name:"reduced",label:"Reduced"},{name:"minimal",label:"Minimal"},{name:"custom",label:"Custom"}],detail_layouts:[{name:"standard",label:"Standard"},{name:"custom_page",label:"Custom layout from page"}]},$rootScope.current_page="home",$scope.pages={home:{label:"Home".translate(),style:""},listEdit:{label:"List editing".translate(),style:"transform:translateX(-90vw);"}},$scope.data_views=[],$scope.wp_pages=[],$scope.init=function(){$scope.load_configs(),$scope.load_wp_pages(),$scope.load_data_views()},$scope.load_configs=function(){$scope.api("configs").then(function($response){$scope.configs=$response})},$scope.reset_configs=function(){$scope.api("configs",null,{method:"PATCH"}).then(function($response){$scope.configs=$response,$scope.show_toast("Configuration reset to demo mode")})},$scope.save_configs=function(){$scope.api("configs",{settings:$scope.configs}).then(function($response){$scope.show_toast("Save completed")})},$scope.load_wp_pages=function(){$scope.api("pages").then(function($response){$scope.wp_pages=$response})},$scope.load_data_views=function(){$scope.api("account").then(function($response){console.log($response),$scope.data_views=$response.data_views})},$scope.show_page=function($page_id,$params){let lPromise;return console.log("page is called",$page_id),$q(function($resolve,$reject){$rootScope.$broadcast("on-"+$page_id,$params,function($result){$resolve($result)})})},$scope.confirm=function($title,$message,$options){$options=angular.merge({ev:null,ok:"OK",cancel:"Cancel"},$options);var confirm=$mdDialog.confirm().title($title.translate()).textContent($message.translate()).targetEvent($options.ev).ok($options.ok.translate()).cancel($options.cancel.translate());return confirm._options.parent=angular.element(document.body),$mdDialog.show(confirm)},$scope.show_toast=function($message){try{$mdToast.show($mdToast.simple().textContent($message.translate()).position("top right").hideDelay(3e3))}catch($ex){console.log($ex),console.log($message)}},$scope.dialog=function($dialog_id,$params){let lPromise;return $q(function($resolve,$reject){$rootScope.$broadcast("on-"+$dialog_id,$params,function($result){$resolve($result)})})},$scope.api=function($path,$data,$options){let lPromise;return $options=angular.merge({url:wpApiSettings.root+"immodb/"+$path,method:void 0===$data?"GET":"POST",data:$data,headers:{"X-WP-Nonce":wpApiSettings.nonce}},$options),$q(function($resolve,$reject){$http($options).then(function success($result){"200"==$result.status?$resolve($result.data):$reject(null)},function fail($error){console.log("Fail on path",$path,"with data",$data,$error),$scope.show_toast($error)})})},$scope.copy=function($data){let lContent="";lContent=null!==$data&&"object"==typeof $data?JSON.stringify($data):$data;let lTextarea=document.createElement("textarea");lTextarea.textContent=lContent,lTextarea.style.position="fixed",document.body.appendChild(lTextarea),lTextarea.select();try{$scope.show_toast("Copied to clipboard"),document.execCommand("copy")}catch(ex){return console.warn("Copy to clipboard failed.",ex),!1}finally{document.body.removeChild(lTextarea)}},$scope.isSame=function($objA,$objB){if(null!=$objA&&null!=$objB){for(const key in $objA)if("$$hashKey"!=key)if(null!=$objA[key]&&null!=$objB[key]){if(void 0===$objA[key]||void 0===$objB[key])return!1;if("function"==typeof $objA[key].push){if($objA[key].length!=$objB[key].length)return!1;for(let i=0;i<$objA[key].length;i++)if(!$scope.isSame($objA[key][i],$objB[key][i]))return!1}else if("object"==typeof $objA[key]){if(!$scope.isSame($objA[key],$objB[key]))return!1}else if($objA[key]!=$objB[key])return!1}else if(null!=$objA[key]||null!=$objB[key])return!1}else if(null==$objA||null==$objB)return!1;return!0}}),ImmoDbApp.directive("immodbFilterGroup",function(){let dir_controller;return{restrict:"E",scope:{model:"=ngModel",parent:"=ngParent"},controllerAs:"ctrl",template:'<div ng-include="\'filter-group\'" class="immodb-filter-group group-operator-{{model.operator}}"></div>',controller:function($scope,$rootScope){$scope.filter_group_operators={and:"And",or:"Or"},$scope.filter_operators={equal:"Equal to",not_equal:"Different of",less_than:"Less than",less_or_equal_to:"Less or equals to",greater_than:"Greater than",greater_or_equal_to:"Greater or equals to",in:"One of",not_in:"Not one of",like:"Contains",not_like:"Does not contains"},$scope.$watch("model",function(){$scope.init()}),$scope.init=function(){console.log("filter_group model",$scope.model,$scope.parent)},$scope.addFilterGroup=function(){null==$scope.model.filter_groups&&($scope.model.filter_groups=[]),$scope.model.filter_groups.push({filters:null,operator:"and"})},$scope.removeGroup=function(){$scope.removeFromList($scope.model,$scope.parent,"filter_groups")},$scope.removeFromList=function($item,$parent,$name){let lNewList=[];$list=$parent[$name],$list.forEach(function($elm){JSON.stringify($elm)!=JSON.stringify($item)&&lNewList.push($elm)}),0==lNewList.length&&(lNewList=null),$parent[$name]=lNewList},$scope.addFilter=function($group){null==$scope.model.filters&&($scope.model.filters=[]),$scope.model.filters.push({field:"",operator:"Equal",value:""})},$scope.switchOperator=function($newOperator){$scope.model.operator=$newOperator}}}});